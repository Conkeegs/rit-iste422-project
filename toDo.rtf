{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fswiss\fcharset0 Helvetica;}{\f1\fswiss\fcharset0 Helvetica-Bold;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.22000}\viewkind4\uc1 
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\f0\fs24\lang9 - faculty and student tables MYSQL errors\par
- update .github/workflows/simple_build.yml test run directories\par
- support multiple DBMS languages\par
- replace edge diagrammer with XML?\par
\par
\b\f1\fs36 Milestone #1 SDLC Diagrams:\par

\pard\li360\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fs24 Document:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-720\li1440\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0\f0 project management methodology and high-level tasks\b\f1\par
{\pntext\f2\'B7\tab}\b0\f0 scrum (daily stand-ups (daily and on discord), jira, product backlog, sprint planning, sprint estimation, sprint backlog, sprint review && retrospective)\par
{\pntext\f2\'B7\tab}list of tasks based on milestones coming up\par

\pard\li360\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\par
\b\f1 UML Entity Diagram:\b0\f0\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-720\li1440\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640 public and private methods\par
{\pntext\f2\'B7\tab}do not create UML entity diagrams for EdgeConnectorTest and ExampleFileFilter\par
{\pntext\f2\'B7\tab}EdgeConvertGUI can be represented by a box on the diagram\par
{\pntext\f2\'B7\tab}only need to define class fields, not method local variables\par
{\pntext\f2\'B7\tab}stereotype notation (interface, abstract class) where required and directionality arrows with super/subclasses (arrows don\rquote t need labels e.g. no cardinality, method names, or objects)\par

\pard\li360\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\par
\b\f1 UML Sequence Diagram:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-720\li1440\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0\f0 create sequence diagram of the interactions when EdgeConvertFileParser.parseEdgeFile() is called. Can have the interactions spread out horizontally or vertically\par
{\pntext\f2\'B7\tab}{{\field{\*\fldinst{HYPERLINK https://sequencediagram.org/ }}{\fldrslt{https://sequencediagram.org/\ul0\cf0}}}}\f0\fs24  and {{\field{\*\fldinst{HYPERLINK https://plantuml.com/ }}{\fldrslt{https://plantuml.com/\ul0\cf0}}}}\f0\fs24\par

\pard\li360\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\par
\b\f1 Flowchart OR UML Activity Diagram:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-720\li1440\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0\f0 For how the information in the Java objects get transformed into a SQL file (input \emdash > process \emdash > output)\par
{\pntext\f2\'B7\tab}Could illustrate how file is opened, how the lines in the file are read, how/what objects are created, and how do these objects get linked together\par

\pard\li360\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b\f1 Submission:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0\tab link to github commit for this milestone\f0\par
{\pntext\f2\'B7\tab}\tab Submit PDFs for each part, named according to type of diagram\par

\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b\f1\par
\fs36 Milestone #2 Logging:\par

\pard\li720\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fs24 Notes:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0 submit link to github\f0\par
{\pntext\f2\'B7\tab}add {{\field{\*\fldinst{HYPERLINK https://logging.apache.org/log4j/2.x/ }}{\fldrslt{https://logging.apache.org/log4j/2.x/\ul0\cf0}}}}\f0\fs24  logging to the project\par
{\pntext\f2\'B7\tab}have 4 different "logging levels"\par
{\pntext\f2\'B7\tab}some logging to all classes except ExampleFileFilter\par
{\pntext\f2\'B7\tab}EdgeTable and EdgeField can have log messages in the Constructor (since they're essentially Java POJOs)\par
{\pntext\f2\'B7\tab}Files must be logged at DEBUG level, and console logging is at your choice of INFO or WARN level (console and file logging at different levels)\par
{\pntext\f2\'B7\tab}use {{\field{\*\fldinst{HYPERLINK https://github.com/edgriebel/rit-iste422-bank }}{\fldrslt{https://github.com/edgriebel/rit-iste422-bank\ul0\cf0}}}}\f0\fs24  as example for logging (log4j2.xml files in testing and src and build.gradle, and remove references to "checkstyle")\par
{\pntext\f2\'B7\tab}a "session" means the app is started, the provided Courses.edg edge file is loaded, a mysql file is generated, and the program is exited\b\f1\par

\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tab Submission:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0 submit link to github with logging implemented\f0\par
{\pntext\f2\'B7\tab}\f1 attach log file with DEBUG level logging for a session\f0\par
{\pntext\f2\'B7\tab}\f1 attach a file with console output for the same session (Capture with "[command] 2>&1 > console.log" "[command] 2>&1 | tee console.log" or just cut-n-paste from console)\f0\par

\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b\f1\fs36 Milestone #3 Tests and Plan:\par

\pard\li720\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fs24 Notes:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0 based on these slides: {{\field{\*\fldinst{HYPERLINK https://mycourses.rit.edu/d2l/le/content/989018/viewContent/8452350/View }}{\fldrslt{https://mycourses.rit.edu/d2l/le/content/989018/viewContent/8452350/View\ul0\cf0}}}}\f0\fs24\par
{\pntext\f2\'B7\tab}example test plan: {{\field{\*\fldinst{HYPERLINK https://github.com/edgriebel/rit-iste422-bank/blob/master/test_plan.txt }}{\fldrslt{https://github.com/edgriebel/rit-iste422-bank/blob/master/test_plan.txt\ul0\cf0}}}}\f0\fs24\par
{\pntext\f2\'B7\tab}check book for "workingExample.jar\rdblquote\par
{\pntext\f2\'B7\tab}\f1 fix bugs and warnings\f0\par
{\pntext\f2\'B7\tab}\f1 write unit tests for classes\f0\par
{\pntext\f2\'B7\tab}\f1 choose 4 of these 5 to test: CreateDDLMySQLTest,\f0  \f1 EdgeConvertCreateDDLTest, EdeConvertFileParserTest, EdgeFieldTest, EdgeTableTest\f0\par

\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\par
\b\f1\fs36 Milestone #4 Refactored Code:\par

\pard\li720\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fs24 Notes:\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\b0 EdgeConvertFileParser fix coupling due to lack of encapsulation (such as posting things under the UI interface)\f0 , it calls System.exit() for some error conditions, a lot of fields are defined in the class that should be defined in the method (like currentLine, fieldName, tableName, isAttribute, etc), the schema file is opened in one method and used in another method but stored as a field rather than being passed to the processing methods\par
{\pntext\f2\'B7\tab}EdgeTable and EdgeField are pretty obtuse\par
{\pntext\f2\'B7\tab}refactor the methods parseEdgeFile and parseSaveFile to their own classes (this could involve moving some of the methods not responsible for parsing files to a new class; making EdgeConvertFileParser an Abstract class; and having parseEdgeFile and parseSaveFile in their own classes that extend EdgeConvertFileParser)\par
{\pntext\f2\'B7\tab}The refactoring probably should involve adding some abstract classes, interfaces, new methods, etc. into EdgeConvertFileParser to make it easier to add this and other file formats. One good place to start would be to convert EdgeConvertFileParser into an abstract class with new classes for parseSaveFile and parseEdgeFile in concrete child classes. If you go this route there will need to be changes to how the UI works\par
{\pntext\f2\'B7\tab}You can leave the constants that are defined in EdgeConvertFileParser where they are, or you can split them out into some kind of constants class.\par
{\pntext\f2\'B7\tab}You can rewrite methods including changing visibility.\par
{\pntext\f2\'B7\tab}ParseSaveFile and parse EdgeFile can be moved into their own classes outside EdgeConvertFileParser.\par
{\pntext\f2\'B7\tab}Modify the UI as needed to allow selecting this new file.\par
{\pntext\f2\'B7\tab}A .sav file can be generated from the menu option "Save As..." after loading an .edg or .sav file\par
}
 